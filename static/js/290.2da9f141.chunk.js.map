{"version":3,"file":"static/js/290.2da9f141.chunk.js","mappings":"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","sources":["components/TweetsList/TweetsList.styled.jsx","redux/selectors.js","components/TweetsList/TweetsList.jsx","components/Pagination/Pagination.jsx","components/ToTopBtn/ToTopBtn.styled.jsx","components/ToTopBtn/ToTopBtn.jsx","pages/Tweets.js"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { theme } from \"../../utils/theme\";\r\n\r\nimport logo from \"../../images/logo.png\";\r\nimport bg from \"../../images/bg.png\";\r\n\r\nexport const TweetsUl = styled.ul`\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tjustify-content: center;\r\n\tmargin: 15px 0;\r\n\r\n\tgap: 8px;\r\n\r\n\t${theme.mq.desktop} {\r\n\t\tgap: 16px;\r\n\t}\r\n`;\r\nexport const Card = styled.li`\r\n\tdisplay: flex;\r\n\tjustify-content: flex-end;\r\n\talign-items: center;\r\n\tflex-direction: column;\r\n\r\n\twidth: 380px;\r\n\theight: 460px;\r\n\r\n\tbackground: url(${logo}), url(${bg}),\r\n\t\tlinear-gradient(114.99deg, #471ca9 -0.99%, #5736a3 54.28%, #4b2a99 78.99%);\r\n\tbackground-position: left 20px top 20px, left 36px top 28px, left 0 top 0;\r\n\tbackground-repeat: no-repeat, no-repeat, no-repeat;\r\n\r\n\tbox-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\r\n\tborder-radius: 20px;\r\n`;\r\nexport const Avatar = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\tposition: relative;\r\n\tmargin-bottom: 26px;\r\n\twidth: 100%;\r\n\r\n\t&:before {\r\n\t\tcontent: \"\";\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\tleft: 0;\r\n\t\ttop: 50%;\r\n\t\theight: 8px;\r\n\t\ttransform: translate(0, -50%);\r\n\t\tbackground: #ebd8ff;\r\n\t\tbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\r\n\t\t\tinset 0px -1.71846px 3.43693px #ae7be3,\r\n\t\t\tinset 0px 3.43693px 2.5777px #fbf8ff;\r\n\t}\r\n`;\r\nexport const AvatarImg = styled.div`\r\n\tposition: relative;\r\n\r\n\theight: 80px;\r\n\twidth: 80px;\r\n\toverflow: hidden;\r\n\r\n\tborder: 8px solid transparent;\r\n\tborder-radius: 50%;\r\n\r\n\tbackground: #ebd8ff;\r\n\tbox-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\r\n\t\tinset 0px -2.19582px 4.39163px #ae7be3,\r\n\t\tinset 0px 4.39163px 3.29372px #fbf8ff;\r\n\r\n\tz-index: 1;\r\n\r\n\t& img {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tobject-fit: cover;\r\n\t}\r\n`;\r\nexport const Tweets = styled.p`\r\n\tmargin-bottom: 16px;\r\n\tfont-family: \"Montserrat\";\r\n\tfont-style: normal;\r\n\tfont-weight: 500;\r\n\tfont-size: 20px;\r\n\tline-height: 24px;\r\n\ttext-transform: uppercase;\r\n\r\n\tcolor: #ebd8ff;\r\n`;\r\nexport const Followers = styled.p`\r\n\tmargin-bottom: 26px;\r\n\tfont-family: \"Montserrat\";\r\n\tfont-style: normal;\r\n\tfont-weight: 500;\r\n\tfont-size: 20px;\r\n\tline-height: 24px;\r\n\ttext-transform: uppercase;\r\n\r\n\tcolor: #ebd8ff;\r\n`;\r\nexport const Btn = styled.button`\r\n\tpadding: 14px 56px;\r\n\tmargin-bottom: 36px;\r\n\r\n\tfont-weight: 600;\r\n\tfont-size: 18px;\r\n\ttext-transform: uppercase;\r\n\tcolor: #373737;\r\n\r\n\tbackground: #ebd8ff;\r\n\tbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n\tborder-radius: 10.3108px;\r\n\ttransition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\r\n`;\r\nexport const BtnBack = styled.button`\r\n\tpadding: 14px 28px;\r\n\tmargin-top: 15px;\r\n\r\n\tfont-weight: 600;\r\n\tfont-size: 18px;\r\n\ttext-transform: uppercase;\r\n\tcolor: #373737;\r\n\r\n\tbackground: #37ce97;\r\n\tbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n\tborder-radius: 10.3108px;\r\n\ttransition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\r\n`;\r\n","export const getTweets = (state) => state.tweets.items;\r\nexport const IsLoading = (state) => state.tweets.isLoading;\r\nexport const getFilter = (state) => state.filter;\r\n","import Container from \"components/Container/Container\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateTweets } from \"redux/tweetsOperations\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import { useLocation, Link } from \"react-router-dom\";\r\n\r\nimport {\r\n\tTweetsUl,\r\n\tCard,\r\n\tAvatar,\r\n\tAvatarImg,\r\n\tTweets,\r\n\tFollowers,\r\n\tBtn,\r\n\tBtnBack,\r\n} from \"./TweetsList.styled\";\r\nimport { getTweets } from \"redux/selectors\";\r\n\r\nexport const TweetsList = () => {\r\n\tconst users = useSelector(getTweets);\r\n\t// const [users, setUsers] = useState([]);\r\n\tconst dispatch = useDispatch();\r\n\tconst navigate = useNavigate();\r\n\r\n\t// const filter = useSelector(getFilter);\r\n\r\n\t// const normFilter = filter.toLocaleLowerCase();\r\n\t// const renderContactsList = contacts.filter((contact) =>\r\n\t// \tcontact.name.toLocaleLowerCase().includes(normFilter)\r\n\t// let following = [];\r\n\r\n\t// const location = useLocation();\r\n\r\n\t// const backLink = location.state?.from ?? \"/\";\r\n\r\n\tfunction followerFormat(data) {\r\n\t\treturn data.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\t}\r\n\r\n\tfunction checkFollowing(id, following) {\r\n\t\treturn [...following].includes(id) ? true : false;\r\n\t}\r\n\r\n\tconst handleClick = (id) => {\r\n\t\tconst user = users.find((item) => item.id === id);\r\n\t\tconst indx = user.following.includes(id);\r\n\r\n\t\tif (!indx) {\r\n\t\t\tconst data = [...user.following, id];\r\n\t\t\tconst count = user.followers + 1;\r\n\t\t\tdispatch(\r\n\t\t\t\tupdateTweets({\r\n\t\t\t\t\tid,\r\n\t\t\t\t\tfollowing: data,\r\n\t\t\t\t\tfollowers: count,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tconst data = [...user.following].splice(indx);\r\n\t\t\tconst count = user.followers - 1;\r\n\t\t\tdispatch(\r\n\t\t\t\tupdateTweets({\r\n\t\t\t\t\tid,\r\n\t\t\t\t\tfollowing: data,\r\n\t\t\t\t\tfollowers: count,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<BtnBack type=\"button\" onClick={() => navigate(\"/\")}>\r\n\t\t\t\tGo Back\r\n\t\t\t</BtnBack>\r\n\t\t\t{users.length > 0 ? (\r\n\t\t\t\t<TweetsUl>\r\n\t\t\t\t\t{users?.map(({ id, user, tweets, followers, avatar, following }) => (\r\n\t\t\t\t\t\t<Card key={id}>\r\n\t\t\t\t\t\t\t<Avatar>\r\n\t\t\t\t\t\t\t\t<AvatarImg>\r\n\t\t\t\t\t\t\t\t\t<img src={avatar} alt={user} />\r\n\t\t\t\t\t\t\t\t</AvatarImg>\r\n\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t<Tweets>{tweets} tweets</Tweets>\r\n\t\t\t\t\t\t\t<Followers>{followerFormat(followers)} followers</Followers>\r\n\t\t\t\t\t\t\t<Btn\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: checkFollowing(id, following)\r\n\t\t\t\t\t\t\t\t\t\t? \"#5CD3A8\"\r\n\t\t\t\t\t\t\t\t\t\t: \"#EBD8FF\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonClick={() => handleClick(id)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{checkFollowing(id, following) ? \"following\" : \"follow\"}\r\n\t\t\t\t\t\t\t</Btn>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</TweetsUl>\r\n\t\t\t) : (\r\n\t\t\t\t<p style={{ margin: \"0 auto\" }}>No contacts find</p>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n};\r\n","import Pagination from \"@mui/material/Pagination\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nexport default function PaginationRounded({ onChange, numbPage }) {\r\n\treturn (\r\n\t\t<Stack spacing={2} style={{ alignItems: \"center\", margin: \"30px 0\" }}>\r\n\t\t\t<Pagination\r\n\t\t\t\tcount={numbPage}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tshape=\"rounded\"\r\n\t\t\t\tsize=\"large\"\r\n\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\tshowFirstButton\r\n\t\t\t\tshowLastButton\r\n\t\t\t/>\r\n\t\t</Stack>\r\n\t);\r\n}\r\n","import styled from \"styled-components\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nexport const ToTopBtn = styled(IconButton)`\r\n\tposition: fixed;\r\n`;\r\n","import UpIcon from \"@mui/icons-material/KeyboardArrowUp\";\r\nimport { ToTopBtn } from \"./ToTopBtn.styled\";\r\n\r\nexport const ToTopButton = () => {\r\n\tconst onTopMove = () => {\r\n\t\twindow.scrollTo({\r\n\t\t\ttop: 0,\r\n\t\t\tbehavior: \"smooth\",\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ToTopBtn onClick={onTopMove} aria-label=\"move to top\" size=\"large\">\r\n\t\t\t<UpIcon />\r\n\t\t</ToTopBtn>\r\n\t);\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {\r\n\tfetchTweets,\r\n\tfetchAllTweets,\r\n\tupdateTweets,\r\n} from \"redux/tweetsOperations\";\r\nimport { TweetsList } from \"components/TweetsList/TweetsList\";\r\nimport PaginationRounded from \"components/Pagination/Pagination\";\r\nimport { IsLoading } from \"redux/selectors\";\r\nimport { ToTopButton } from \"components/ToTopBtn/ToTopBtn\";\r\n\r\nexport default function Tweets() {\r\n\tconst [page, setPage] = useState(1);\r\n\tconst [users, setUsers] = useState([]);\r\n\tconst [numbPage, setNumbPage] = useState(1);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\t// if(users.prefState!==users)\r\n\t\t(async function fetchAllUsers() {\r\n\t\t\tconst { payload } = await dispatch(fetchAllTweets(page));\r\n\t\t\tconst countPage = Math.round(Number(payload.length) / 12);\r\n\t\t\tsetNumbPage(countPage);\r\n\t\t})();\r\n\t\t(async function fetchUsers() {\r\n\t\t\tconst { payload } = await dispatch(fetchTweets(page));\r\n\t\t\tsetUsers(payload);\r\n\t\t})();\r\n\t}, [dispatch, page, users.length]);\r\n\r\n\t// useEffect(() => {}, [users]);\r\n\r\n\tconst handlePageChange = (e, p) => {\r\n\t\tsetPage(p);\r\n\r\n\t\twindow.scrollTo({\r\n\t\t\ttop: 0,\r\n\t\t\tbehavior: \"smooth\",\r\n\t\t});\r\n\t};\r\n\t// const handleClick = (id) => {\r\n\t// \tconst user = users.find((item) => item.id === id);\r\n\t// \tconst indx = user.following.includes(id);\r\n\r\n\t// \tif (!indx) {\r\n\t// \t\tconst data = [...user.following, id];\r\n\t// \t\tconst count = user.followers + 1;\r\n\r\n\t// \t\tsetUsers(\r\n\t// \t\t\tdispatch(\r\n\t// \t\t\t\tupdateTweets({\r\n\t// \t\t\t\t\tid,\r\n\t// \t\t\t\t\tfollowing: data,\r\n\t// \t\t\t\t\tfollowers: count,\r\n\t// \t\t\t\t})\r\n\t// \t\t\t)\r\n\t// \t\t);\r\n\t// \t\t// (async function fetchUsers() {\r\n\t// \t\t// \tconst { payload } = await dispatch(fetchTweets(page));\r\n\t// \t\t// \tsetUsers(payload);\r\n\t// \t\t// })();\r\n\t// \t} else {\r\n\t// \t\tconst data = [...user.following].splice(indx);\r\n\t// \t\tconst count = user.followers - 1;\r\n\r\n\t// \t\tsetUsers(\r\n\t// \t\t\tdispatch(\r\n\t// \t\t\t\tupdateTweets({\r\n\t// \t\t\t\t\tid,\r\n\t// \t\t\t\t\tfollowing: data,\r\n\t// \t\t\t\t\tfollowers: count,\r\n\t// \t\t\t\t})\r\n\t// \t\t\t)\r\n\t// \t\t);\r\n\t// \t}\r\n\t// \t// (async function fetchUsers() {\r\n\t// \t// \tconst { payload } = await dispatch(fetchTweets(page));\r\n\t// \t// \tsetUsers(payload);\r\n\t// \t// })();\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>Tweets</title>\r\n\t\t\t</Helmet>\r\n\t\t\t{users && <TweetsList users={users} />}\r\n\t\t\t<ToTopButton />\r\n\t\t\t{users && IsLoading && (\r\n\t\t\t\t<PaginationRounded onChange={handlePageChange} numbPage={numbPage} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n}\r\n"],"names":["TweetsUl","styled","_templateObject","_taggedTemplateLiteral","theme","Card","_templateObject2","bg","Avatar","_templateObject3","AvatarImg","_templateObject4","Tweets","_templateObject5","Followers","_templateObject6","Btn","_templateObject7","BtnBack","_templateObject8","getTweets","state","tweets","items","IsLoading","isLoading","TweetsList","users","useSelector","dispatch","useDispatch","navigate","useNavigate","checkFollowing","id","following","_toConsumableArray","includes","_jsxs","Container","children","_jsx","type","onClick","length","map","_ref","data","user","followers","avatar","src","alt","toString","replace","style","backgroundColor","find","item","indx","splice","count","updateTweets","concat","handleClick","margin","PaginationRounded","onChange","numbPage","Stack","spacing","alignItems","Pagination","variant","shape","size","color","showFirstButton","showLastButton","ToTopBtn","IconButton","ToTopButton","window","scrollTo","top","behavior","UpIcon","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","setUsers","_useState5","_useState6","setNumbPage","useEffect","_fetchAllUsers","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$dispatch","payload","countPage","wrap","_context","prev","next","fetchAllTweets","sent","Math","round","Number","stop","apply","arguments","_fetchUsers","_callee2","_yield$dispatch2","_context2","fetchTweets","_Fragment","Helmet","e","p"],"sourceRoot":""}